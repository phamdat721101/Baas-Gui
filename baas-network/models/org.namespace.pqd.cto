/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace org.namespace.pqd

enum contractState{
  o WAITING_SIGNATURES
  o COMPLETE
}

asset contract identified by assetId {
  o String assetId
  o String documentHash
  --> Provider creator
  --> Customer signator
  o Boolean creatorSigned
  o Boolean signatorSigned
  o contractState state
}

abstract transaction ledgerTransaction {
  --> contract Contract
}

transaction signContract extends ledgerTransaction {
  
}

transaction completeSignOff extends ledgerTransaction {
}

asset CommodityCustomer identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Customer owner
}
asset CommodityProvider identified by tradingSymbol {
    o String tradingSymbol
    o String description
    o String mainExchange
    o Double quantity
    --> Provider owner
}
participant Vendor identified by venId{
    o String venId
    o String username
    o String password
}
transaction Trade {
    --> CommodityProvider data
    --> Customer owner
}
participant Provider identified by proId{
  o String proId
  o String username
  o String password
}
participant Customer identified by cuId{
  o String cuId
  o String username
  o String password
}

event contractSignedNotification{
  --> contract Contract
  --> Provider SignerP
  --> Customer SignerC
}

event contractCompletedNotification {
  --> contract Contract
}
