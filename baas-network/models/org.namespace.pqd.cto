/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace org.namespace.pqd

enum contractState{
  o WAITING_SIGNATURES
  o COMPLETE
}

concept serviceStat {
  o String serviceId
  o Integer successCount
  o Integer totalCount
}

concept locationService {
  o String province
  o String district
  o String address
}

asset contract identified by assetId {
  o String assetId
  o String serviceId
  o String[] documentHash
  --> Provider creator
  --> Customer signator
  o Boolean creatorSigned
  o Boolean signatorSigned
  o contractState state
  o locationService location
  o String description
  o String dayStart   // ngay bat dau hop dong
  o Integer time      // thoi han hop dong tinh bang thang
  o Double price      // gia tri hd
  o Double rateSuccessContract      // ty le cam ket
  o Double rateSuccess
  o Integer N       // so lan lay du lieu
  o Integer M       // so lan lay thanh cong
}

abstract transaction ledgerTransaction {
  --> contract Contract
}
transaction updateVoting {
  --> contract Contract
  o Boolean isSuccessData
}
transaction signContract extends ledgerTransaction {
  o String dataHash
  
}

transaction completeSignOff extends ledgerTransaction {
}

participant Provider identified by proId{
  o String proId
  o String username
  o String password
  o Integer successDataCount
  o Integer allSendDataCount
  o Double ratingProvider
  o String signature
  o serviceStat[] listServiceStat
}

transaction updateServiceStat {
  --> contract Contract
  --> Provider provider
  o Boolean isSuccessData
}

participant Customer identified by cuId{
  o String cuId
  o String username
  o String password
  o String signature
}
